cl <- makeCluster(no_cores)
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
M=function(t,B,u){expm(t*B)%*%u} # Mass carbon.
Rt=function(t, B, u){diag(colSums(-B))%*%expm(t*B)%*%u} # Respiratory losses.
# create natrix B,
makeB=function(pars){
B=diag(-1*pars[1:7])
B[2,1]=pars["alpha21"]*pars["k1"]
B[3,1]=pars["alpha31"]*pars["k1"]
B[4,1]=pars["alpha41"]*pars["k1"]
B[5,2]=pars["alpha52"]*pars["k2"]
B[4,3]=pars["alpha43"]*pars["k3"]
B[6,3]=pars["alpha63"]*pars["k3"]
B[7,3]=pars["alpha73"]*pars["k3"]
B[6,4]=pars["alpha64"]*pars["k4"]
B[6,5]=pars["alpha65"]*pars["k5"]
B[7,6]=pars["alpha76"]*pars["k6"]
return(B)
}
ecoModel=function(pars,GPP){
mod=Model(t=yr,A=makeB(pars),ivList=P0,inputFluxes=c(GPP,rep(0,6)),pass=TRUE)
Ct=getC(mod)
colnames(Ct)<-c("Fol","Wood","Root","FL","CL","SHA","SHB")
return(data.frame(time=yr,Ct))
}
# ecoCost=function(pars,GPP){
#   out=ecoModel(pars,GPP)
#   cost1=modCost(model=out,obs=obsFol,weight="none")
#   cost2=modCost(model=out,obs=obsWood,cost=cost1,weight="none")
#   cost3=modCost(model=out,obs=obsFL,cost=cost2,weight="std")
#   cost4=modCost(model=out,obs=obsCWD,cost=cost3,weight="mean")
#   cost5=modCost(model=out,obs=obsSC,cost=cost4,weight="none")
#   return(cost5)
# }
ecoCost=function(pars, GPP){
out=ecoModel(pars, GPP)
cost1=modCost(model=out,obs=obsFol, weight="none")
cost2=modCost(model=out,obs=obsWood,cost=cost1, weight="none")
#cost3=modCost(model=out,obs=obsFR,cost=cost2, weight="none")
#cost3=modCost(model=out,obs=obsRoot,cost=cost2, weight="none")
cost3=modCost(model=out,obs=obsFL,cost=cost2, weight="std")
cost4=modCost(model=out,obs=obsCL,cost=cost3, weight="mean")
cost5=modCost(model=out,obs=obsSHA,cost=cost4, weight="none")
cost6=modCost(model=out,obs=obsSHB,cost=cost5, weight="none")
return(cost6)
}
randomFit=function(GPP){
ecoFit=modFit(f=ecoCost,p=inipars,GPP=GPP,lower=0,upper=c(rep(3,7),rep(1,10)), method="Marq")
cp=coef(ecoFit)
return(cp)
}
meanSATTs=function(u, B){
x=-1*solve(B)%*%u
SA=sum(-1*solve(B)%*%x)/(sum(x))
TT=sum(x)/sum(u)
return(c(x=sum(x),SA=SA,TT=TT))
}
makeMod=function(pars,GPP){
B=makeB(pars)
u=matrix(c(GPP,rep(0,6)),7,1)
SATT=meanSATTs(u,B)
return(SATT)
}
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Read and prepare data
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
treat='Control' # Treatment: select 'Control' or 'Drought'
if (treat=='Control'){
Cdata<-read.csv("Data/Prades_data_control.csv")
} else if (treat=='Drought'){
Cdata<-read.csv("Data/Prades_data_drought.csv")
} else {
print("Select a treatment")
}
poolnames=c("Foliage", "Wood", "Roots", "Thin litter", "Thick litter", "Soil carbon A", "Soil carbon B")
poolnamesd=c("Foliage", "Wood", "Thin litter", "Thick litter", "Soil carbon A", "Soil carbon B")
pdf("Figures/Stocks.pdf",5,8)
par(mfrow=c(3,2))
for (i in 3:8){
plot(x=Cdata[,1],y=Cdata[,i],
col="#69b3a2",
pch=20,
cex=1,
xlab="time [years]", ylab=expression("C stocks ["*MgC~ha^{-1}*"]"),
main=poolnamesd[i-2])
}
dev.off()
#frac_foliage=0.08; frac_wood=0.19+0.73
GPP=47.63 # [Mg ha-1] Interpolation for 2024 from data reported in Table 5 by Sabaté (2002).
GPP_sd=6.91 # [Mg ha-1] Interpolation for 2024 from data reported in Table 5 by Sabaté (2002).
# Random variates for primary forests. Mean and sd values from data provided by Romà Ogaya.
# nplots=4
# set.seed(11); primaryplotAges=sample(45:80,nplots,replace=TRUE)
# set.seed(22); folp=rnorm(nplots,mean=mean(Cdata$Leaves),sd=sd(Cdata$Leaves))
# set.seed(33); woodp=rnorm(nplots,mean=mean(Cdata$Wood),sd=sd(Cdata$Wood))
# #set.seed(44); finerootp=rnorm(nplots,mean=0.45*17.4, sd=0.45*2.6)
# #set.seed(55); coarserootp=rnorm(nplots,mean=0.45*67.1, sd=0.45*16.4)
# set.seed(66); finelitterp=rnorm(nplots,mean=mean(Cdata$Thin.litter,na.rm=TRUE),sd=sd(Cdata$Thin.litter,na.rm=TRUE))
# set.seed(77); cwdp=rnorm(nplots,mean=mean(Cdata$Thick.litter,na.rm=TRUE),sd=sd(Cdata$Thick.litter,na.rm=TRUE))
# set.seed(88); soilcAp=rnorm(nplots,mean=mean(Cdata$Soil.Hz.A,na.rm=TRUE),sd=sd(Cdata$Soil.Hz.A,na.rm=TRUE))
# set.seed(99); soilcBp=rnorm(nplots,mean=mean(Cdata$Soil.Hz.B,na.rm=TRUE),sd=sd(Cdata$Soil.Hz.B,na.rm=TRUE))
# Mean and sd values from data provided by Romà Ogaya.
y0=1953 # year since the forest is not disturbed. According to Ogaya et al, (2020). Other sources say the forest is undisturbed from 45 to 80 years ago.
# Observations from forest
obsFol=data.frame(time=Cdata$Year-y0,Fol=Cdata$Leaves)
obsWood=data.frame(time=Cdata$Year-y0,Wood=Cdata$Wood)
obsFL=data.frame(time=Cdata$Year-y0,FL=Cdata$Thin.litter)
obsCL=data.frame(time=Cdata$Year-y0,CL=Cdata$Thick.litter)
obsSHA=data.frame(time=Cdata$Year-y0,SHA=Cdata$Soil.Hz.A)
obsSHB=data.frame(time=Cdata$Year-y0,SHB=Cdata$Soil.Hz.B)
obsST=data.frame(time=Cdata$Year-y0,ST=Cdata$Soil.Hz.A+Cdata$Soil.Hz.B)
# plot(x=obsFol[,1],y=obsFol[,2])
# # Merged observations
# obsFol=rbind(obsFols,data.frame(time=primaryplotAges,Fol=folp))
# obsWood=rbind(obsWoods,data.frame(time=primaryplotAges,Wood=woodp))
# #obsFR=rbind(obsFRs,data.frame(time=primaryplotAges,FR=finerootp))
# #obsCR=rbind(obsCRs,data.frame(time=primaryplotAges,CR=coarserootp))
# obsFL=rbind(obsFLs,data.frame(time=primaryplotAges,FL=finelitterp))
# obsCWD=rbind(obsCWDs,data.frame(time=primaryplotAges,CWD=cwdp))
# obsSA=rbind(obsSAs,data.frame(time=primaryplotAges,SA=soilcAp))
# obsSB=rbind(obsSBs,data.frame(time=primaryplotAges,SB=soilcBp))
yr=seq(0,150,0.5)
# Initial values
P0=c(Fol=0,Wood=0,Root=0,FL=0,CL=0,SHA=mean(obsSA[,2],na.rm=TRUE),SHB=mean(obsSB[,2],na.rm=TRUE))
library(SoilR)
library(FME)
library(RColorBrewer)
library(expm)
library(parallel)
setwd("~/Documents/MSCA/DISEQ/Prades model") # set path.
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Cores
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Calculate the number of cores
no_cores=detectCores() #- 10
# Initiate cluster
cl <- makeCluster(no_cores)
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
M=function(t,B,u){expm(t*B)%*%u} # Mass carbon.
Rt=function(t, B, u){diag(colSums(-B))%*%expm(t*B)%*%u} # Respiratory losses.
# create natrix B,
makeB=function(pars){
B=diag(-1*pars[1:7])
B[2,1]=pars["alpha21"]*pars["k1"]
B[3,1]=pars["alpha31"]*pars["k1"]
B[4,1]=pars["alpha41"]*pars["k1"]
B[5,2]=pars["alpha52"]*pars["k2"]
B[4,3]=pars["alpha43"]*pars["k3"]
B[6,3]=pars["alpha63"]*pars["k3"]
B[7,3]=pars["alpha73"]*pars["k3"]
B[6,4]=pars["alpha64"]*pars["k4"]
B[6,5]=pars["alpha65"]*pars["k5"]
B[7,6]=pars["alpha76"]*pars["k6"]
return(B)
}
ecoModel=function(pars,GPP){
mod=Model(t=yr,A=makeB(pars),ivList=P0,inputFluxes=c(GPP,rep(0,6)),pass=TRUE)
Ct=getC(mod)
colnames(Ct)<-c("Fol","Wood","Root","FL","CL","SHA","SHB")
return(data.frame(time=yr,Ct))
}
# ecoCost=function(pars,GPP){
#   out=ecoModel(pars,GPP)
#   cost1=modCost(model=out,obs=obsFol,weight="none")
#   cost2=modCost(model=out,obs=obsWood,cost=cost1,weight="none")
#   cost3=modCost(model=out,obs=obsFL,cost=cost2,weight="std")
#   cost4=modCost(model=out,obs=obsCWD,cost=cost3,weight="mean")
#   cost5=modCost(model=out,obs=obsSC,cost=cost4,weight="none")
#   return(cost5)
# }
ecoCost=function(pars, GPP){
out=ecoModel(pars, GPP)
cost1=modCost(model=out,obs=obsFol, weight="none")
cost2=modCost(model=out,obs=obsWood,cost=cost1, weight="none")
#cost3=modCost(model=out,obs=obsFR,cost=cost2, weight="none")
#cost3=modCost(model=out,obs=obsRoot,cost=cost2, weight="none")
cost3=modCost(model=out,obs=obsFL,cost=cost2, weight="std")
cost4=modCost(model=out,obs=obsCL,cost=cost3, weight="mean")
cost5=modCost(model=out,obs=obsSHA,cost=cost4, weight="none")
cost6=modCost(model=out,obs=obsSHB,cost=cost5, weight="none")
return(cost6)
}
randomFit=function(GPP){
ecoFit=modFit(f=ecoCost,p=inipars,GPP=GPP,lower=0,upper=c(rep(3,7),rep(1,10)), method="Marq")
cp=coef(ecoFit)
return(cp)
}
meanSATTs=function(u, B){
x=-1*solve(B)%*%u
SA=sum(-1*solve(B)%*%x)/(sum(x))
TT=sum(x)/sum(u)
return(c(x=sum(x),SA=SA,TT=TT))
}
makeMod=function(pars,GPP){
B=makeB(pars)
u=matrix(c(GPP,rep(0,6)),7,1)
SATT=meanSATTs(u,B)
return(SATT)
}
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
# Read and prepare data
# -----------------------------------------------------------------------------------------------------------------------------------------------------------
treat='Control' # Treatment: select 'Control' or 'Drought'
if (treat=='Control'){
Cdata<-read.csv("Data/Prades_data_control.csv")
} else if (treat=='Drought'){
Cdata<-read.csv("Data/Prades_data_drought.csv")
} else {
print("Select a treatment")
}
poolnames=c("Foliage", "Wood", "Roots", "Thin litter", "Thick litter", "Soil carbon A", "Soil carbon B")
poolnamesd=c("Foliage", "Wood", "Thin litter", "Thick litter", "Soil carbon A", "Soil carbon B")
pdf("Figures/Stocks.pdf",5,8)
par(mfrow=c(3,2))
for (i in 3:8){
plot(x=Cdata[,1],y=Cdata[,i],
col="#69b3a2",
pch=20,
cex=1,
xlab="time [years]", ylab=expression("C stocks ["*MgC~ha^{-1}*"]"),
main=poolnamesd[i-2])
}
dev.off()
#frac_foliage=0.08; frac_wood=0.19+0.73
GPP=47.63 # [Mg ha-1] Interpolation for 2024 from data reported in Table 5 by Sabaté (2002).
GPP_sd=6.91 # [Mg ha-1] Interpolation for 2024 from data reported in Table 5 by Sabaté (2002).
# Random variates for primary forests. Mean and sd values from data provided by Romà Ogaya.
# nplots=4
# set.seed(11); primaryplotAges=sample(45:80,nplots,replace=TRUE)
# set.seed(22); folp=rnorm(nplots,mean=mean(Cdata$Leaves),sd=sd(Cdata$Leaves))
# set.seed(33); woodp=rnorm(nplots,mean=mean(Cdata$Wood),sd=sd(Cdata$Wood))
# #set.seed(44); finerootp=rnorm(nplots,mean=0.45*17.4, sd=0.45*2.6)
# #set.seed(55); coarserootp=rnorm(nplots,mean=0.45*67.1, sd=0.45*16.4)
# set.seed(66); finelitterp=rnorm(nplots,mean=mean(Cdata$Thin.litter,na.rm=TRUE),sd=sd(Cdata$Thin.litter,na.rm=TRUE))
# set.seed(77); cwdp=rnorm(nplots,mean=mean(Cdata$Thick.litter,na.rm=TRUE),sd=sd(Cdata$Thick.litter,na.rm=TRUE))
# set.seed(88); soilcAp=rnorm(nplots,mean=mean(Cdata$Soil.Hz.A,na.rm=TRUE),sd=sd(Cdata$Soil.Hz.A,na.rm=TRUE))
# set.seed(99); soilcBp=rnorm(nplots,mean=mean(Cdata$Soil.Hz.B,na.rm=TRUE),sd=sd(Cdata$Soil.Hz.B,na.rm=TRUE))
# Mean and sd values from data provided by Romà Ogaya.
y0=1953 # year since the forest is not disturbed. According to Ogaya et al, (2020). Other sources say the forest is undisturbed from 45 to 80 years ago.
# Observations from forest
obsFol=data.frame(time=Cdata$Year-y0,Fol=Cdata$Leaves)
obsWood=data.frame(time=Cdata$Year-y0,Wood=Cdata$Wood)
obsFL=data.frame(time=Cdata$Year-y0,FL=Cdata$Thin.litter)
obsCL=data.frame(time=Cdata$Year-y0,CL=Cdata$Thick.litter)
obsSHA=data.frame(time=Cdata$Year-y0,SHA=Cdata$Soil.Hz.A)
obsSHB=data.frame(time=Cdata$Year-y0,SHB=Cdata$Soil.Hz.B)
obsST=data.frame(time=Cdata$Year-y0,ST=Cdata$Soil.Hz.A+Cdata$Soil.Hz.B)
# plot(x=obsFol[,1],y=obsFol[,2])
# # Merged observations
# obsFol=rbind(obsFols,data.frame(time=primaryplotAges,Fol=folp))
# obsWood=rbind(obsWoods,data.frame(time=primaryplotAges,Wood=woodp))
# #obsFR=rbind(obsFRs,data.frame(time=primaryplotAges,FR=finerootp))
# #obsCR=rbind(obsCRs,data.frame(time=primaryplotAges,CR=coarserootp))
# obsFL=rbind(obsFLs,data.frame(time=primaryplotAges,FL=finelitterp))
# obsCWD=rbind(obsCWDs,data.frame(time=primaryplotAges,CWD=cwdp))
# obsSA=rbind(obsSAs,data.frame(time=primaryplotAges,SA=soilcAp))
# obsSB=rbind(obsSBs,data.frame(time=primaryplotAges,SB=soilcBp))
yr=seq(0,150,0.5)
# Initial values
P0=c(Fol=0,Wood=0,Root=0,FL=0,CL=0,SHA=mean(obsSHA[,2],na.rm=TRUE),SHB=mean(obsSHB[,2],na.rm=TRUE))
# inipars=c(k1=0.5,k2=0.3,k3=0.1,k4=0.1,k5=0.1,k6=0.1,k7=0.1,
#           alpha21=0.1,alpha31=0.1,alpha41=0.1,alpha51=0.1,alpha53=0.1,alpha62=0.1,alpha64=0.1,alpha75=0.1,alpha76=0.1)
inipars=c(k1=0.5,k2=0.3,k3=0.1,k4=0.1,k5=0.1,k6=0.1,k7=0.1,
alpha21=0.1,alpha31=0.1,alpha41=0.1,alpha52=0.1,alpha43=0.1,alpha63=0.1,alpha73=0.1,alpha64=0.1,alpha65=0.1,alpha76=0.1)
tau=seq(0,400,by=0.05)
pal=brewer.pal(7,"Dark2")
# Random variation of gpp.
n=1000
set.seed(123); gpp=rnorm(n,mean=GPP,sd=GPP_sd)
pdf("Figures/GPPhist.pdf")
hist(gpp)
dev.off()
allObjects=ls()
clusterExport(cl, varlist=c(allObjects, "modFit", "ode","modCost","Model", "getC"))
modpars=parSapply(cl,gpp,FUN=randomFit)
modpars=t(modpars)
save(modpars, file="modpars.RData")
load("modpars.RData")
porceSATT=NULL
for(i in 1:length(gpp)){
tmp=(makeMod(pars=modpars[i,], GPP=gpp[i]))
porceSATT=rbind(porceSATT,tmp)
}
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,60))
boxplot(modpars, outline=FALSE)
round(apply(porceSATT,2,mean),2);round(apply(porceSATT,2,sd),2)
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,60))
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,100))
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,500))
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,800))
boxplot(porceSATT[,2:3], ylab="Age or transit time (years)", names=c("Mean system age", "Mean transit time"), outline=FALSE, ylim=c(0,1000))
boxplot(modpars, outline=FALSE)
round(apply(porceSATT,2,mean),2);round(apply(porceSATT,2,sd),2)
meanpars=apply(modpars, MARGIN = 2, FUN=mean)
sdpars=apply(modpars, MARGIN = 2, FUN=sd)
meanGPP=mean(gpp); meanU=matrix(c(meanGPP, rep(0,6)),7,1)
meanB=makeB(meanpars)
meanX=-1*solve(meanB)%*%meanU
meanFluxes=meanB%*%diag(as.numeric(meanX))
colSums(meanB%*%diag(as.numeric(1/diag(meanB)))) # First element is the proportion respired from foliage quoted in text
mSA=systemAge(A=meanB, u=meanU,a=tau)
mTT=transitTime(A=meanB, u=meanU, a=tau)
Mt=t(sapply(tau,FUN=M, B=meanB, u=meanU))
Resp=t(sapply(tau, FUN=Rt, B=meanB, u=meanU))
mSA
mTT
Resp
pdf("../Figures/Fate.pdf")
pdf("Figures/Fate.pdf")
par(mfrow=c(2,1),mar=c(4,4.5,0.1,0.1))
matplot(tau, Mt[,1:3], col=pal, lty=c(1,2,2), lwd=c(1,1,2), type="l", xlim=c(0,100),cex.lab=1.1,  xlab="", ylab=expression(paste("Carbon remaining (Mg C h",a^-1,")")), bty="n")
lines(tau, rowSums(Mt),lwd=2)
legend("topright", c("Total",poolnames[1:3]), col=c(1,pal[1:3]), lty=c(1,1,2,2),lwd=c(2,1,1,2), bty="n")
matplot(tau, Mt[,4:7], col=pal[4:7], lty=c(1,2,1,2),lwd=c(1,2,2,1), type="l", xlim=c(0,100),cex.lab=1.1,  xlab="Time since fixation (years)", ylab=expression(paste("Carbon remaining (Mg C h",a^-1,")")), bty="n")
legend("topright", poolnames[4:7], col=pal[4:7], lty=c(1,2,1,2),lwd=c(1,2,2,1), bty="n")
par(mfrow=c(1,1))
dev.off()
pdf("Figures/TransitTime.pdf")
par(mfrow=c(2,1), mar=c(4,4.5,1,1))
plot(tau,meanGPP*mTT$transitTimeDensity, xlim=c(0,10),type="l",lwd=2,cex.lab=1.1,xlab="", ylab=expression(paste("Carbon respired (Mg C h",a^-1, " y", r^-1, ")")),bty="n")
matlines(tau,Resp[,c(1,5)],lty=c(1,2),col=pal[c(1,5)])
abline(v=mTT$quantiles[2],col=2,lty=3)
legend("right", c("Total",poolnames[c(1,5)]), col=c(1,pal[c(1,5)]), lty=c(1,1,2),lwd=c(2,1,1), bty="n")
legend("topright", "a", bty="n")
par(mar=c(4,4.5,0,1))
matplot(tau,Resp[,c(-1,-5)], col=pal[c(-1,-5)], lty=c(2,2,1,2,1),lwd=c(1,2,1,2,1), type="l",xlim=c(0,20),ylim=c(0,0.1),xlab="Time since fixation (years)", ylab=expression(paste("Carbon respired (Mg C h",a^-1, " y", r^-1, ")")), bty="n")
legend("topright", c(poolnames[c(-1,-5)]), col=c(pal[c(-1,-5)]), lty=c(2,2,1,2,1),lwd=c(1,2,1,2,1), bty="n")
legend("topright", "b", bty="n")
par(mfrow=c(1,1))
dev.off()
ind50=which(tau <= mTT$quantiles[2])
ind95=which(tau <= mTT$quantiles[3])
bluepal=brewer.pal(3,"Blues")
pdf("Figures/areaTTdistribution.pdf")
par(mar=c(4,5,1,1))
plot(tau,meanGPP*mTT$transitTimeDensity, xlim=c(0,5),type="l",lwd=2,cex.lab=1.1,
ylab=expression(paste("Carbon respired (Mg C h",a^-1, " y", r^-1, ")")),
xlab="Time since C fixation (transit time in years)",bty="n")
polygon(x=c(tau[ind95], rev(tau[ind95])), y=c(meanGPP*mTT$transitTimeDensity[ind95], rep(0,length(ind95))),col=bluepal[2])
polygon(x=c(tau[ind50], rev(tau[ind50])), y=c(meanGPP*mTT$transitTimeDensity[ind50], rep(0,length(ind50))),col=bluepal[3])
legend("topright", c(paste("50% of GPP respired in less than ", round(mTT$quantiles[2],2), " years"),
paste("95% of GPP respired in less than ", round(mTT$quantiles[3],2), " years")),
col=bluepal[c(3,2)], pch=15, bty="n")
dev.off()
plot(tau, mTT$transitTimeDensity, type="l", log="y",col=2, xlim=c(0,150), xlab="Age or transit time (years)", ylab="Density distribution", bty="n")
abline(v=mTT$meanTransitTime, col=2, lty=2)
lines(tau, mSA$systemAgeDensity, col=4)
abline(v=mSA$meanSystemAge, col=4, lty=2)
legend("topright", c("System age", "Transit time"), lty=1, col=c(4,2), bty="n")
##
avgModel=ecoModel(pars=meanpars, GPP=meanGPP)
allModels=array(0,c(length(yr), 8, n))
for(i in 1:n){
allModels[,,i]<-as.matrix(ecoModel(pars=modpars[i,], GPP=gpp[i]))
}
meanpred=apply(allModels, c(1,2), mean)
sdpred=apply(allModels, c(1,2), sd)
minpred=apply(allModels, c(1,2), min)
maxpred=apply(allModels, c(1,2), max)
allX=NULL
for(i in 1:n){
allX[i]=sum(-1*solve(makeB(modpars[i,]))%*%matrix(c(gpp[i],rep(0,6)),7,1))
}
round(mean(allX),1); round(sd(allX),1)
allR=NULL
allRa=NULL
allRh=NULL
for(i in 1:n){
tmpB=makeB(modpars[i,])
tmpX=-1*solve(makeB(modpars[i,]))%*%matrix(c(gpp[i],rep(0,6)),7,1)
tmpr=colSums(tmpB)
allR[i]=sum(tmpr*tmpX)
allRa[i]=sum(tmpr[1:4]*tmpX[1:4])
allRh[i]=sum(tmpr[5:7]*tmpX[5:7])
}
round(mean(allRa),1); round(sd(allRa),1)
round(mean(allRh),1); round(sd(allRh),1)
round(mean(allR),1); round(sd(allR),1)
mean(allRa)/mean(allR); mean(allRh)/mean(allR)
NPP=gpp+allRa
round(mean(NPP),1); round(sd(NPP),1)
meanPoolAgef=function(pars,GPP){
B=makeB(pars)
u=matrix(c(GPP,rep(0,6)),7,1)
SA=systemAge(A=B,u=u,a=1,q=0.95)
return(SA)
}
mPA=NULL
qSA=NULL
for(i in 1:n){
tmp=meanPoolAgef(pars=modpars[i,],GPP=gpp[i])
mPA=cbind(mPA,tmp$meanPoolAge)
qSA=cbind(qSA,tmp$quantilesSystemAge)
}
round(apply(mPA,1,mean),2); round(apply(mPA,1,sd),2)
round(apply(qSA,1,mean),1); round(apply(qSA,1,sd),1)
q5TT=NULL
q95TT=NULL
for(i in 1:n){
tmp=TTf(pars=modpars[i,],GPP=gpp[i])
q5TT[i]=tmp$quantiles[1]
q95TT[i]=tmp$quantiles[2]
}
TTf=function(pars,GPP){
B=makeB(pars)
u=matrix(c(GPP,rep(0,6)),7,1)
TT=transitTime(A=B,u=u,a=1,q=c(0.5,0.95))
return(TT)
}
q5TT=NULL
q95TT=NULL
for(i in 1:n){
tmp=TTf(pars=modpars[i,],GPP=gpp[i])
q5TT[i]=tmp$quantiles[1]
q95TT[i]=tmp$quantiles[2]
}
round(mean(q5TT),2); round(sd(q5TT),2)
round(mean(q95TT),2); round(sd(q95TT),2)
pdf("Figures/avgModel.pdf")
matplot(avgModel[,1], avgModel[,-1], type="l",lty=1, col=pal, xlab="Time since recovery (years)", ylab="Carbon stocks (Mg C ha-1)", bty="n")
points(obsFol,col=pal[1], pch=19, cex=0.5)
points(obsWood, col=pal[2], pch=19, cex=0.5)
points(obsFR, col=pal[3], pch=19, cex=0.5)
pdf("Figures/avgModel.pdf")
matplot(avgModel[,1], avgModel[,-1], type="l",lty=1, col=pal, xlab="Time since recovery (years)", ylab="Carbon stocks (Mg C ha-1)", bty="n")
points(obsFol,col=pal[1], pch=19, cex=0.5)
points(obsWood, col=pal[2], pch=19, cex=0.5)
points(obsFL, col=pal[4], pch=19, cex=0.5)
points(obsCL, col=pal[5], pch=19, cex=0.5)
points(obsSHA, col=pal[6], pch=19, cex=0.5)
points(obsSHB, col=pal[7], pch=19, cex=0.5)
legend("topleft", legend=poolnames, lty=1, col=pal, bty="n")
dev.off()
pdf("Figures/dataModelFit.pdf")
par(mfrow=c(2,2), mar=c(4,4.5,0.1,0.1))
plot(meanpred[,1], meanpred[,2], type="l", col=pal[1], bty="n", ylim=c(0,15),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,2], rev(minpred[,2])), col="gray", border = pal[1])
points(obsFol,col=pal[1], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,6], rev(minpred[,6])), col="gray", border = pal[5])
points(obsFL, col=pal[5], pch=19, cex=0.5)
legend("topleft", "a", bty="n")
plot(meanpred[,1], meanpred[,3], type="l", col=pal[2], bty="n", ylim=c(0,150),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,3], rev(minpred[,3])), col="gray", border = pal[2])
points(obsWood, col=pal[2], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,5], rev(minpred[,5])), col="gray", border = pal[4])
points(obsCR, col=pal[4], pch=19, cex=0.5)
pdf("Figures/dataModelFit.pdf")
par(mfrow=c(2,2), mar=c(4,4.5,0.1,0.1))
plot(meanpred[,1], meanpred[,2], type="l", col=pal[1], bty="n", ylim=c(0,15),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,2], rev(minpred[,2])), col="gray", border = pal[1])
points(obsFol,col=pal[1], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,6], rev(minpred[,6])), col="gray", border = pal[5])
points(obsFL, col=pal[5], pch=19, cex=0.5)
legend("topleft", "a", bty="n")
plot(meanpred[,1], meanpred[,3], type="l", col=pal[2], bty="n", ylim=c(0,150),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,3], rev(minpred[,3])), col="gray", border = pal[2])
points(obsWood, col=pal[2], pch=19, cex=0.5)
# polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,5], rev(minpred[,5])), col="gray", border = pal[4])
# points(obsCL, col=pal[4], pch=19, cex=0.5)
# legend("topleft", "b", bty="n")
plot(meanpred[,1], meanpred[,7], col=pal[6], type="l", ylim=c(0,10),cex.lab=1.1, bty="n", ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="Time (yr)")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,7], rev(minpred[,7])), col="gray", border = pal[6])
points(obsCL, col=pal[6], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,4], rev(minpred[,4])), col="gray", border = pal[3])
points(obsRoot, col=pal[3], pch=19, cex=0.5)
pdf("Figures/dataModelFit.pdf")
par(mfrow=c(2,2), mar=c(4,4.5,0.1,0.1))
plot(meanpred[,1], meanpred[,2], type="l", col=pal[1], bty="n", ylim=c(0,15),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,2], rev(minpred[,2])), col="gray", border = pal[1])
points(obsFol,col=pal[1], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,6], rev(minpred[,6])), col="gray", border = pal[5])
points(obsFL, col=pal[5], pch=19, cex=0.5)
legend("topleft", "a", bty="n")
plot(meanpred[,1], meanpred[,3], type="l", col=pal[2], bty="n", ylim=c(0,150),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,3], rev(minpred[,3])), col="gray", border = pal[2])
points(obsWood, col=pal[2], pch=19, cex=0.5)
# polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,5], rev(minpred[,5])), col="gray", border = pal[4])
# points(obsCL, col=pal[4], pch=19, cex=0.5)
# legend("topleft", "b", bty="n")
plot(meanpred[,1], meanpred[,7], col=pal[6], type="l", ylim=c(0,10),cex.lab=1.1, bty="n", ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="Time (yr)")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,7], rev(minpred[,7])), col="gray", border = pal[6])
points(obsCL, col=pal[6], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,4], rev(minpred[,4])), col="gray", border = pal[3])
# points(obsRoot, col=pal[3], pch=19, cex=0.5)
legend("topleft", "c", bty="n")
plot(meanpred[,1], meanpred[,8], type="l", col=pal[7], bty="n", ylim=c(0,200),cex.lab=1.1, ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="Time (yr)")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,8], rev(minpred[,8])), col="gray", border = pal[7])
points(obsSHA, col=pal[7], pch=19, cex=0.5)
legend("topright", legend=poolnames, lty=1, col=pal, bty="n")
legend("topleft", "d", bty="n")
par(mfrow=c(1,1))
dev.off()
plot(meanpred[,1], meanpred[,7], col=pal[6], type="l", ylim=c(0,10),xlim=c(0,100), bty="n", ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="Time (yr)")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,7], rev(minpred[,7])), col="gray", border = pal[6])
points(obsCWDs, col=pal[6], pch=19, cex=0.5)
pdf("Figures/modelDataFitboxplot.pdf")
par(mfrow=c(2,2), mar=c(4,4.5,0.1,0.1))
plot(meanpred[,1], meanpred[,2], type="l", col=pal[1], bty="n", ylim=c(0,15),xlim=c(0,100), ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,2], rev(minpred[,2])), col="gray", border = pal[1])
points(obsFols,col=pal[1], pch=19, cex=0.5)
pdf("Figures/modelDataFitboxplot.pdf")
par(mfrow=c(2,2), mar=c(4,4.5,0.1,0.1))
plot(meanpred[,1], meanpred[,2], type="l", col=pal[1], bty="n", ylim=c(0,15),xlim=c(0,100), ylab=expression(paste("Carbon stock (Mg C h",a^-1,")")), xlab="")
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,2], rev(minpred[,2])), col="gray", border = pal[1])
points(obsFol,col=pal[1], pch=19, cex=0.5)
polygon(x=c(maxpred[,1],rev(minpred[,1])), y=c(maxpred[,6], rev(minpred[,6])), col="gray", border = pal[5])
points(obsFL, col=pal[5], pch=19, cex=0.5)
boxplot(folp,add=TRUE, at=c(100),range=0,bty="n",col=pal[1])
